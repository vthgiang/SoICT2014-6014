services:
  database:
#    container_name: database
    image: mongo
    ports:
      - "9040:27017"
    env_file:
      - ./micro-services/database-service/.env
    volumes:
      - ./micro-services/database-service/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - service-db:/data/db
      - service-db:/data/configdb
      - service-db:/data/log
    networks:
      - vnist-network
  client-service:
    container_name: client-service
    image: node:16-alpine
    ports:
      - "9000:3000"
    env_file:
      - ./client-vite/.env
    volumes:
      - ./client-vite:/app
      - ./client-vite/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm i @material-ui/core -f && npm start"
    networks:
      - vnist-network
  server-service:
    container_name: server-service
    image: node:16-alpine
    ports:
      - "8000:8000"
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
      - ./server/node_modules:/app/node_modules
    command: sh -c "cd /app && apk update && apk add --no-cache krb5-dev g++ make python3 py3-pip && npm install -f && npm start"
    networks:
      - vnist-network
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.3-management
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - vnist-network
  kpi-service:
    container_name: kpi-service
    image: node:16-alpine
    # ports:
    #   - "7000:7000"
    env_file:
      - ./micro-services/kpi-service/.env
    volumes:
      - ./micro-services/kpi-service:/app
      - ./micro-services/kpi-service/node_modules:/app/node_modules
    command: sh -c "cd /app && apk update && apk add --no-cache python3 && npm install -f && npm start"
    networks:
      - vnist-network
  task-service:
    container_name: task-service
    image: node:16-alpine
    # ports:
    #   - "6000:6000"
    env_file:
      - ./micro-services/task-service/.env
    volumes:
      - ./micro-services/task-service:/app
      - ./micro-services/task-service/node_modules:/app/node_modules
    command: sh -c "cd /app && apk update && apk add --no-cache python3 && npm install -f && npm start"
    networks:
      - vnist-network
volumes:
  service-db:
    driver: local
networks:
  vnist-network:
    driver: bridge
