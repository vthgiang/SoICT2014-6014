services:
  database:
    #    container_name: database
    image: mongo
    ports:
      - "9040:27017"
    env_file:
      - ./server/.env
    volumes:
      - ./micro-services/database-service/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - service-db:/data/db
      - service-db:/data/configdb
      - service-db:/data/log
    networks:
      - vnist-network
  client:
    #    container_name: client
    image: node:16-alpine
    ports:
      - "3000:3000"
    env_file:
      - ./client-vite/.env
    environment:
      - REACT_APP_SERVER=http://localhost:8000
      - REACT_APP_SERVICE_IDENTITY_SERVER=http://localhost:8000
    volumes:
      - ./client-vite:/app
      - ./client-vite/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm start"
    working_dir: /app
    networks:
      - vnist-network
  server:
    #    container_name: server
    image: tungnguyensnk/qlcv-server:latest
    ports:
      - "8000:8000"
    env_file:
      - ./server/.env
    volumes:
      - ./server:/app
      - ./server/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm run dev"
    networks:
      - vnist-network
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - vnist-network
  kpi-service:
    container_name: kpi-service
    image: tungnguyensnk/qlcv-server:latest
    # ports:
    #   - "7000:7000"
    env_file:
      - ./server/.env
    volumes:
      - ./micro-services/kpi-service:/app
      - ./micro-services/kpi-service/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm start"
    working_dir: /app
    networks:
      - vnist-network
  task-service:
    container_name: task-service
    image: tungnguyensnk/qlcv-server:latest
    # ports:
    #   - "6000:6000"
    env_file:
      - ./server/.env
    volumes:
      - ./micro-services/task-service:/app
      - ./micro-services/task-service/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm start"
    working_dir: /app
    networks:
      - vnist-network
  production-service:
    container_name: production-service
    image: tungnguyensnk/qlcv-server:latest
    # ports:
    #   - "6000:6000"
    env_file:
      - ./micro-services/production-service/.env
    volumes:
      - ./micro-services/production-service:/app
      - ./micro-services/production-service/node_modules:/app/node_modules
    command: sh -c "cd /app && npm install -f && npm start"
    networks:
      - vnist-network
volumes:
  service-db:
    driver: local
networks:
  vnist-network:
    driver: bridge
